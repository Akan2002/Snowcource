# Generated by Django 3.2.7 on 2023-07-06 16:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=124, verbose_name='Название курса')),
                ('description', models.TextField(verbose_name='Описание курса')),
                ('start_date', models.DateField(verbose_name='Дата старта')),
                ('end_date', models.DateField(verbose_name='Дата окончание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена')),
                ('adress', models.CharField(max_length=255, verbose_name='Адрес офиса')),
                ('additional_info', models.TextField(verbose_name='Дополнительная информация о курсе')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.category', verbose_name='Катерия')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to=settings.AUTH_USER_MODEL, verbose_name='Преподователь')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='LearningTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название технологии')),
            ],
            options={
                'verbose_name': 'Технология обучения',
                'verbose_name_plural': 'Технологии обучения',
            },
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала и время начало')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания и время окончание')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_schedule', to='mainapp.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Расписание курса',
                'verbose_name_plural': 'Расписание курсов',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=127, verbose_name='Никнейм')),
                ('name', models.CharField(max_length=127, verbose_name='Имя')),
                ('surname', models.CharField(max_length=127, verbose_name='Фамилия')),
                ('phone_number', models.IntegerField(verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='Емаил')),
                ('password', models.CharField(max_length=127, verbose_name='Пароль')),
                ('links_to_ourses', models.ManyToManyField(blank=True, related_name='users', to='mainapp.Course')),
                ('role', models.ManyToManyField(related_name='users_role', to='mainapp.Course')),
            ],
            options={
                'verbose_name': 'Юзер',
                'verbose_name_plural': 'Юзеры',
            },
        ),
    ]
